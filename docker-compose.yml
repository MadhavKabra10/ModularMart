version: '3'

services:
  postgres:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: Madhav
      POSTGRES_PASSWORD: Madhav1234
      POSTGRES_DB : testdb
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - microservices-net
    restart: unless-stopped

#  mongodb:
#    container_name: ms_mongo_db
#    image: mongo
#    ports:
#      - 27017:27017
#    volumes:
#      - mongo:/data
#      - ./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=Madhav
#      - MONGO_INITDB_ROOT_PASSWORD=Madhav1234
#    networks:
#      - microservices-net
#    deploy:
#      resources:
#        limits:
#          cpus: '1.0'
#          memory: 1G
#    healthcheck:
#      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  mongo-express:
#    container_name: ms_mongo_express
#    image: mongo-express
#    restart: always
#    ports:
#      - 8081:8081
#    environment:
#      ME_CONFIG_BASICAUTH_USERNAME: Madhav
#      ME_CONFIG_BASICAUTH_PASSWORD: Madhav1234
#      ME_CONFIG_MONGODB_ADMINUSERNAME: Madhav
#      ME_CONFIG_MONGODB_ADMINPASSWORD: Madhav1234
#    networks:
#      - microservices-net
#    depends_on:
#      mongodb:
#        condition: service_healthy
#  mongodb:
#    image: mongo
#    container_name: mongo_db
#    ports:
#      - 27017:27017
#    volumes:
#      - mongo:/data
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=Madhav
#      - MONGO_INITDB_ROOT_PASSWORD=Madhav
#
#  mongo-express:
#    image: mongo-express
#    container_name: mongo_express
#    restart: always
#    ports:
#      - 8081:8081
#    environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=Madhav
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=Madhav
#      - ME_CONFIG_MONGODB_SERVER=mongodb

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - microservices-net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net
  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin: